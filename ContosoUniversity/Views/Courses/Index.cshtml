@model ContosoUniversity.Models.ListOfCoursesViewModel

@{
    ViewData["Title"] = "Courses";
}

<h1>Courses</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get" class="row row-cols-lg-auto g-3 align-items-center">
    <div col-12>
        <select asp-for="DepartmentId" asp-items="Model.Departments" class="form-select">
            <option value="">-- Select department --</option>
        </select>
    </div>
    <div class="col-12">
        <input type="text" 
               class="form-control"
               name="searchString" 
               value="@Model.CurrentFilter" 
               placeholder="Search course name ..." />
    </div>
    <div class="col-12">
        <button type="submit" class="btn btn-primary">
            <i class="fa-solid fa-search"></i>
        </button>
    </div>
    <input type="hidden" name="sortOrder" value="@Model.CurrentSort" />
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].CourseId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].Credit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].Department)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Courses) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CourseId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Credit)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Department.Name)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.CourseId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.CourseId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.CourseId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = Model.Courses.HasPreviousPage ? "" : "disabled";
    var nextDisabled = Model.Courses.HasNextPage ? "" : "disabled";
}

<a asp-action="Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-currentFilter="@Model.CurrentFilter"
   asp-route-departmentId="@Model.DepartmentId"
   asp-route-pageNumber="@(Model.Courses.PageIndex - 1)"
   class="btn btn-primary @prevDisabled"
>
     <i class="fa-solid fa-angle-left"></i> Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-currentFilter="@Model.CurrentFilter"
   asp-route-departmentId="@Model.DepartmentId"
   asp-route-pageNumber="@(Model.Courses.PageIndex + 1)"
   class="btn btn-primary @nextDisabled"
>
     Next <i class="fa-solid fa-angle-right"></i>
</a>